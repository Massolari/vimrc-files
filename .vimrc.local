"*****************************
" Configurações de variáveis *
"*****************************

" Suporte ao mouse
set mouse=a

" Ligar o menu de opções com tab
set wildmenu

" Realçar linha e coluna onde o cursor está
set cursorline
set cursorcolumn

" netrw com o estilo do nerdtree
let g:netrw_banner = 0
let g:netrw_liststyle = 3
let g:netrw_browse_split = 4
let g:netrw_altv = 1
let g:netrw_winsize = 25

" Melhora as cores, se tiver suporte
if (has("termguicolors"))
    set termguicolors
endif

" Validar xml com o nsjusecase.xsd
let g:syntastic_xml_xmllint_args = "--noout --schema vendor/nasajon/mdatransformer/schemas/nsjusecase.xsd %"

" Número do buffer na aba
let g:airline#extensions#tabline#buffer_nr_show = 1

" Ao executar o AsyncRun já abrir o quickfix
let g:asyncrun_open = 10

" Usar o emmet apenas no modo visual ou no modo inserção
let g:user_emmet_mode='iv'

" Diretórios à ignorar ao procurar arquivos
let Grep_Skip_Dirs = '.git node_modules cache'

" Comando do fzf
let $FZF_DEFAULT_COMMAND =  "find * -path '*/\.*' -prune -o -path 'node_modules/**' -prune -o -path 'app/cache/**' -prune -o -path 'target/**' -prune -o -path 'dist/**' -prune -o  -type f -print -o -type l -print 2> /dev/null"

"***********************
" Comandos automáticos *
"***********************

" Configuração de comentário para twig
autocmd FileType html.twig setlocal commentstring={#\ %s\ #}

" Insere o 'use' de classes em arquivos php
autocmd FileType php inoremap <Leader>u <Esc>:call IPhpInsertUse()<CR>
autocmd FileType php noremap <Leader>u :call PhpInsertUse()<CR>

" Sempre que entrar na janela de quickfix retirar o mapeamento customizado do Enter
augroup enable-cr-quickfix
    " In the quickfix window, <CR> is used to jump to the error under the cursor, so undefine the mapping there.
    autocmd!
    autocmd BufReadPost quickfix nnoremap <buffer> <CR> <CR>
augroup END

"**********
" Funções *
"**********

" Função para alterar o quickfix
function! QFixToggle()
    if exists("g:qfix_win")
        cclose
        unlet g:qfix_win
    else
        copen 10
        let g:qfix_win = bufnr("$")
    endif
endfunction

" Função que é usada para import de arquivos;
function! IPhpInsertUse()
    call PhpInsertUse()
    call feedkeys('a',  'n')
endfunction

"*************
" Mapeamento *
"*************

" Abrir netrw com F3
nnoremap <F3> :Lexplore<CR>

" Quando abrir, também fechar
inoremap ( ()<left>
inoremap { {}<left>
inoremap [ []<left>
inoremap ' ''<left>
inoremap " ""<left>
inoremap ` ``<left>

" Limpar espaços em branco nos finais da linha
nmap <F5> mp:%s/\s\+$/<CR>`p

" Buscar o que está visualmente selecionado pressionando //
vnoremap // y/<C-R>"<CR>

" Rodar o M.D.A.
noremap <F9> :AsyncRun docker-compose run --rm transformer<CR>

" Gerar arquivo tags
nnoremap <F12> :AsyncRun ctags -R --fields=+laimS --languages=php --exclude="\.git" --exclude="app/cache" --exclude="node_modules"<CR>

" Enter no modo normal funciona como no modo inserção
nnoremap <CR> i<CR><Esc>

" Identar arquivo
nnoremap <leader>i mpgg=G`p

" Chamar função que alterna o quickfix
nnoremap <Tab> :call QFixToggle()<CR>

" Setas redimensionam janelas adjacentes
nnoremap <left> :vertical resize -5<cr>
nnoremap <right> :vertical resize +5<cr>
nnoremap <up> :resize -5<cr>
nnoremap <down> :resize +5<cr>

" Ponto e vírgula no final da linha
nmap <C-Space> mpA;<Esc>`p;
nmap <C-@> <C-Space>

" Autocomplete
inoremap <C-Space> <C-x><C-o>
inoremap <C-@> <C-Space>
